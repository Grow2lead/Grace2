# Generated by Django 5.2.5 on 2025-08-09 08:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('providers', '0002_alter_provider_category'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FitnessCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fitness_type', models.CharField(choices=[('gym', 'Gym & Fitness Center'), ('zumba', 'Zumba & Dance Studio'), ('crossfit', 'CrossFit Box'), ('yoga', 'Yoga Studio'), ('martial_arts', 'Martial Arts School'), ('personal_training', 'Personal Training Studio'), ('multi_purpose', 'Multi-Purpose Fitness Center')], max_length=20)),
                ('total_area_sqft', models.PositiveIntegerField(blank=True, help_text='Total area in square feet', null=True)),
                ('max_capacity', models.PositiveIntegerField(default=50, help_text='Maximum number of people at once')),
                ('parking_spaces', models.PositiveIntegerField(default=0)),
                ('available_equipment', models.JSONField(default=list, help_text='List of available equipment')),
                ('has_air_conditioning', models.BooleanField(default=True)),
                ('has_shower_facilities', models.BooleanField(default=True)),
                ('has_locker_rooms', models.BooleanField(default=True)),
                ('has_changing_rooms', models.BooleanField(default=True)),
                ('has_parking', models.BooleanField(default=True)),
                ('has_water_station', models.BooleanField(default=True)),
                ('membership_types', models.JSONField(default=list, help_text='Available membership types')),
                ('trial_class_available', models.BooleanField(default=True)),
                ('trial_class_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('group_classes_available', models.BooleanField(default=True)),
                ('personal_training_available', models.BooleanField(default=True)),
                ('nutritionist_available', models.BooleanField(default=False)),
                ('physiotherapist_available', models.BooleanField(default=False)),
                ('massage_therapy_available', models.BooleanField(default=False)),
                ('min_age', models.PositiveIntegerField(default=16)),
                ('kids_programs_available', models.BooleanField(default=False)),
                ('senior_programs_available', models.BooleanField(default=False)),
                ('covid_safety_measures', models.JSONField(default=list, help_text='COVID-19 safety measures')),
                ('first_aid_certified_staff', models.BooleanField(default=False)),
                ('early_morning_access', models.BooleanField(default=False, help_text='Access before 6 AM')),
                ('late_night_access', models.BooleanField(default=False, help_text='Access after 10 PM')),
                ('twenty_four_seven', models.BooleanField(default=False, help_text='24/7 access')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fitness_details', to='providers.provider')),
            ],
            options={
                'verbose_name': 'Fitness Center',
                'verbose_name_plural': 'Fitness Centers',
            },
        ),
        migrations.CreateModel(
            name='FitnessInstructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_si', models.CharField(blank=True, max_length=200)),
                ('name_ta', models.CharField(blank=True, max_length=200)),
                ('specializations', models.JSONField(default=list, help_text='List of specializations')),
                ('bio', models.TextField(blank=True)),
                ('certifications', models.JSONField(default=list, help_text='List of certifications')),
                ('years_experience', models.PositiveIntegerField(default=0)),
                ('available_days', models.JSONField(default=list, help_text='Days of the week available')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fitness_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructors', to='providers.fitnesscenter')),
            ],
            options={
                'ordering': ['-average_rating', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FitnessClassSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('all_levels', 'All Levels')], default='all_levels', max_length=20)),
                ('weekday', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('max_participants', models.PositiveIntegerField(default=20)),
                ('drop_in_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('package_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('package_sessions', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fitness_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_schedules', to='providers.fitnesscenter')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_schedules', to='providers.providerservice')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_schedules', to='providers.fitnessinstructor')),
            ],
            options={
                'ordering': ['weekday', 'start_time'],
                'unique_together': {('fitness_center', 'weekday', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='FitnessMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_type', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('suspended', 'Suspended'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=8)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('total_visits', models.PositiveIntegerField(default=0)),
                ('last_visit', models.DateField(blank=True, null=True)),
                ('auto_renewal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fitness_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='providers.fitnesscenter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitness_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'fitness_center')},
            },
        ),
    ]
