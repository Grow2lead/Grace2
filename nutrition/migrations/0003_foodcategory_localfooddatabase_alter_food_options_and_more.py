# Generated by Django 5.2.5 on 2025-08-09 07:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('nutrition', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_si', models.CharField(blank=True, max_length=100)),
                ('name_ta', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Food Categories',
            },
        ),
        migrations.CreateModel(
            name='LocalFoodDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('traditional_name', models.CharField(help_text='Traditional/cultural name', max_length=200)),
                ('cultural_significance', models.TextField(blank=True)),
                ('traditional_preparation', models.TextField(blank=True)),
                ('ceremonial_use', models.CharField(blank=True, max_length=200)),
                ('seasonal_availability', models.JSONField(default=list, help_text='Available months')),
                ('harvest_season', models.CharField(blank=True, max_length=100)),
                ('regional_names', models.JSONField(default=dict, help_text='Names in different regions')),
                ('regional_preparations', models.JSONField(default=dict, help_text='Regional cooking methods')),
                ('ayurvedic_properties', models.JSONField(default=dict, help_text='Ayurvedic categorization')),
                ('medicinal_uses', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Local Food Information',
                'verbose_name_plural': 'Local Food Information',
            },
        ),
        migrations.AlterModelOptions(
            name='food',
            options={'ordering': ['name']},
        ),
        migrations.RemoveField(
            model_name='food',
            name='localized_name_si',
        ),
        migrations.RemoveField(
            model_name='food',
            name='localized_name_ta',
        ),
        migrations.AddField(
            model_name='food',
            name='allergen_info',
            field=models.JSONField(default=list, help_text='List of allergens'),
        ),
        migrations.AddField(
            model_name='food',
            name='barcode',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='food',
            name='calcium_mg',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='food',
            name='common_serving_size',
            field=models.CharField(blank=True, help_text='e.g., 1 cup, 1 slice, 1 piece', max_length=100),
        ),
        migrations.AddField(
            model_name='food',
            name='cooking_instructions',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='food',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='food',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='food',
            name='fiber_g',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='food',
            name='health_benefits',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='food',
            name='iron_mg',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='food',
            name='is_dairy_free',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='food',
            name='is_gluten_free',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='food',
            name='is_vegan',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='food',
            name='is_vegetarian',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='food',
            name='is_verified',
            field=models.BooleanField(default=False, help_text='Verified by nutritionist'),
        ),
        migrations.AddField(
            model_name='food',
            name='name_si',
            field=models.CharField(blank=True, help_text='Sinhala name', max_length=200),
        ),
        migrations.AddField(
            model_name='food',
            name='name_ta',
            field=models.CharField(blank=True, help_text='Tamil name', max_length=200),
        ),
        migrations.AddField(
            model_name='food',
            name='origin',
            field=models.CharField(choices=[('local', 'Local Sri Lankan'), ('south_asian', 'South Asian'), ('international', 'International'), ('processed', 'Processed Food')], default='local', max_length=20),
        ),
        migrations.AddField(
            model_name='food',
            name='preparation_method',
            field=models.CharField(blank=True, help_text='e.g., boiled, fried, raw', max_length=100),
        ),
        migrations.AddField(
            model_name='food',
            name='region',
            field=models.CharField(blank=True, help_text='Specific region in Sri Lanka', max_length=100),
        ),
        migrations.AddField(
            model_name='food',
            name='serving_size_description',
            field=models.CharField(blank=True, help_text='Description of serving size', max_length=200),
        ),
        migrations.AddField(
            model_name='food',
            name='sodium_mg',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='food',
            name='sugar_g',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='food',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='food',
            name='vitamin_c_mg',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='food',
            name='calories',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='food',
            name='carbs_g',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='food',
            name='fat_g',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='food',
            name='name',
            field=models.CharField(help_text='English name', max_length=200),
        ),
        migrations.AlterField(
            model_name='food',
            name='protein_g',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='food',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutrition.foodcategory'),
        ),
        migrations.AddIndex(
            model_name='food',
            index=models.Index(fields=['name'], name='nutrition_f_name_caa2b0_idx'),
        ),
        migrations.AddIndex(
            model_name='food',
            index=models.Index(fields=['category'], name='nutrition_f_categor_50939f_idx'),
        ),
        migrations.AddIndex(
            model_name='food',
            index=models.Index(fields=['origin'], name='nutrition_f_origin_37f8e8_idx'),
        ),
        migrations.AddIndex(
            model_name='food',
            index=models.Index(fields=['is_vegetarian'], name='nutrition_f_is_vege_7fc862_idx'),
        ),
        migrations.AddIndex(
            model_name='food',
            index=models.Index(fields=['is_vegan'], name='nutrition_f_is_vega_dc10da_idx'),
        ),
        migrations.AddField(
            model_name='localfooddatabase',
            name='food',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='local_info', to='nutrition.food'),
        ),
    ]
