# Generated by Django 5.2.5 on 2025-08-09 07:05

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('providers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('booking_date', models.DateField()),
                ('booking_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('participants', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Payment Pending'), ('paid', 'Paid'), ('refunded', 'Refunded'), ('failed', 'Payment Failed')], default='pending', max_length=20)),
                ('service_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('currency', models.CharField(default='LKR', max_length=3)),
                ('customer_name', models.CharField(max_length=200)),
                ('customer_phone', models.CharField(max_length=15)),
                ('customer_email', models.EmailField(max_length=254)),
                ('special_requests', models.TextField(blank=True)),
                ('confirmation_token', models.UUIDField(default=uuid.uuid4)),
                ('provider_notes', models.TextField(blank=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('reschedule_count', models.PositiveIntegerField(default=0)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_bookings', to=settings.AUTH_USER_MODEL)),
                ('original_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rescheduled_bookings', to='bookings.booking')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='providers.provider')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='providers.providerservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('max_bookings', models.PositiveIntegerField(default=1)),
                ('current_bookings', models.PositiveIntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('block_reason', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_slots', to='providers.provider')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='providers.providerservice')),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='BookingCancellation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancellation_type', models.CharField(choices=[('customer', 'Customer Cancelled'), ('provider', 'Provider Cancelled'), ('system', 'System Cancelled'), ('no_show', 'No Show')], max_length=20)),
                ('refund_status', models.CharField(choices=[('none', 'No Refund'), ('partial', 'Partial Refund'), ('full', 'Full Refund'), ('pending', 'Refund Pending'), ('processed', 'Refund Processed')], default='none', max_length=20)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('refund_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('reason', models.TextField()),
                ('refund_processed_at', models.DateTimeField(blank=True, null=True)),
                ('refund_transaction_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cancellation_details', to='bookings.booking')),
                ('cancelled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('card', 'Credit/Debit Card'), ('payhere', 'PayHere'), ('frimi', 'Frimi'), ('bank_transfer', 'Bank Transfer'), ('cash', 'Cash Payment'), ('wallet', 'Digital Wallet')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('currency', models.CharField(default='LKR', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=200)),
                ('gateway_response', models.JSONField(default=dict)),
                ('gateway_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('platform_commission', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('provider_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('failed_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bookings.booking')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('confirmation', 'Booking Confirmation'), ('reminder_24h', '24 Hour Reminder'), ('reminder_2h', '2 Hour Reminder'), ('follow_up', 'Post-Booking Follow Up'), ('cancellation', 'Cancellation Notification'), ('reschedule', 'Reschedule Notification')], max_length=20)),
                ('delivery_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('push', 'Push Notification')], max_length=20)),
                ('scheduled_for', models.DateTimeField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='bookings.booking')),
            ],
            options={
                'ordering': ['scheduled_for'],
            },
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['user', 'status'], name='bookings_bo_user_id_69a5d5_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['provider', 'booking_date'], name='bookings_bo_provide_42944c_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['booking_date', 'booking_time'], name='bookings_bo_booking_fa13ed_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status', 'payment_status'], name='bookings_bo_status_92d418_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingavailability',
            index=models.Index(fields=['provider', 'date'], name='bookings_bo_provide_847e87_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingavailability',
            index=models.Index(fields=['service', 'date'], name='bookings_bo_service_11c2ca_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingavailability',
            index=models.Index(fields=['is_available', 'is_blocked'], name='bookings_bo_is_avai_cea09b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bookingavailability',
            unique_together={('provider', 'service', 'date', 'start_time')},
        ),
        migrations.AddIndex(
            model_name='bookingpayment',
            index=models.Index(fields=['booking', 'status'], name='bookings_bo_booking_7d458c_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingpayment',
            index=models.Index(fields=['gateway_transaction_id'], name='bookings_bo_gateway_c21f49_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingpayment',
            index=models.Index(fields=['status', 'processed_at'], name='bookings_bo_status_89dfa2_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingreminder',
            index=models.Index(fields=['status', 'scheduled_for'], name='bookings_bo_status_207297_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingreminder',
            index=models.Index(fields=['booking', 'reminder_type'], name='bookings_bo_booking_a561be_idx'),
        ),
    ]
